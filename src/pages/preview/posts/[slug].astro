---
import Container from "../../../components/container";
import HeaderBlog from "../../../components/header-blog";
import MoreStories from "../../../components/more-stories";
import PostHeader from "../../../components/post-header";
import PostBody from "../../../components/post-body";
import SectionSeparator from "../../../components/section-separator";
import { metaTagsFragment, responsiveImageFragment } from "../../../lib/fragments";
import Layout from "../../../components/layout";
import useFetch from "../../../lib/fetch"
import getPost from '../../../operations/queries/getPost'

const { slug } = Astro.params

const endpoint = 'https://graphql.datocms.com/preview' 
const response = await useFetch(endpoint, {...getPost, variables: {slug}})
const parsedResponse = await response.json()
const post = parsedResponse.data.post
const morePosts = parsedResponse.data.morePosts

export async function getStaticPaths() {
  const slugsResponse = await fetch(
  'https://graphql.datocms.com/preview',
  {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'Authorization': `Bearer ${import.meta.env.ASTRO_EXAMPLE_CMS_DATOCMS_API_TOKEN}`,
    },
    body: JSON.stringify(
      {query: `{allPosts {
    slug
  }}`}
    ),
  }
)
const parsedSlugResponse = await slugsResponse.json()

const pathsArray = []
for(const slug of parsedSlugResponse.data.allPosts){
  pathsArray.push({params: slug})
}
  return pathsArray;
}
---

<Layout preview={true} currentSlug={`/posts/${slug}`}>
  <Container>
    <HeaderBlog preview={true} />
    <article>
      <PostHeader
        title={post.title}
        coverImage={post.coverImage}
        date={post.date}
        author={post.author}
      />
      <PostBody content={post.content} />
    </article>
    <SectionSeparator />
    <MoreStories preview={true} posts={morePosts} />
  </Container>
</Layout>